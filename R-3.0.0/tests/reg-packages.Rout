
R version 3.0.0 (2013-04-03) -- "Masked Marvel"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## PR 1271  detach("package:base") crashes R.
> try(detach("package:base"))
Error in detach("package:base") : detaching "package:base" is not allowed
> 
> 
> ## invalid 'lib.loc'
> stopifnot(length(installed.packages("mgcv")) == 0)
> ## gave a low-level error message
> 
> 
> ## package.skeleton() with metadata-only code
> ## work in current (= ./tests/ directory):
> tmp <- tempfile()
> writeLines(c('setClass("foo", contains="numeric")',
+              'setMethod("show", "foo",',
+              '          function(object) cat("I am a \\"foo\\"\\n"))'),
+            tmp)
> if(file.exists("myTst")) unlink("myTst", recursive=TRUE)
> package.skeleton("myTst", code_files = tmp)# with a file name warning
Creating directories ...
Creating DESCRIPTION ...
Creating NAMESPACE ...
Creating Read-and-delete-me ...
Copying code files ...
Making help files ...
Done.
Further steps are described in './myTst/Read-and-delete-me'.
Warning message:
In package.skeleton("myTst", code_files = tmp) :
  Invalid file name(s) for R code in ./myTst/R:
  'file347969dd27bd'
 are now renamed to 'z<name>.R'
> file.copy(tmp, (tm2 <- paste(tmp,".R", sep="")))
[1] TRUE
> unlink("myTst", recursive=TRUE)
> op <- options(warn=2) # *NO* "invalid file name" warning {failed in 2.7.[01]}:
> package.skeleton("myTst", code_files = tm2, namespace=TRUE)
Creating directories ...
Creating DESCRIPTION ...
Creating NAMESPACE ...
Creating Read-and-delete-me ...
Copying code files ...
Making help files ...
Done.
Further steps are described in './myTst/Read-and-delete-me'.
> options(op)
> ##_2_ only a class, no generics/methods:
> writeLines(c('setClass("DocLink",',
+              'representation(name="character",',
+              '               desc="character"))'), tmp)
> if(file.exists("myTst2")) unlink("myTst2", recursive=TRUE)
> package.skeleton("myTst2", code_files = tmp)
Creating directories ...
Creating DESCRIPTION ...
Creating NAMESPACE ...
Creating Read-and-delete-me ...
Copying code files ...
Making help files ...
Done.
Further steps are described in './myTst2/Read-and-delete-me'.
Warning message:
In package.skeleton("myTst2", code_files = tmp) :
  Invalid file name(s) for R code in ./myTst2/R:
  'file347969dd27bd'
 are now renamed to 'z<name>.R'
> ##- end_2_ # failed in R 2.11.0
> stopifnot(1 == grep("setClass",
+ 	  readLines(list.files("myTst/R", full.names=TRUE))),
+ 	  c("foo-class.Rd","show-methods.Rd") %in% list.files("myTst/man"))
> ## failed for several reasons in R < 2.7.0
> ##
> ## Part 2: -- build, install, load and "inspect" the package:
> dir.exists <- function(x)
+     is.character(x) && file.exists(x) && file.info(path.expand(x))$isdir
> build.pkg <- function(dir) {
+     stopifnot(dir.exists(dir))
+     patt <- paste(basename(dir), ".*tar\\.gz$", sep="_")
+     unlink(dir('.', pattern = patt))
+     Rcmd <- paste(file.path(R.home("bin"), "R"), "CMD")
+     r <- tail(system(paste(Rcmd, "build --keep-empty-dirs", dir),
+                      intern = TRUE), 3)
+     ## return name of tar file built
+     dir('.', pattern = patt)
+ }
> build.pkg("myTst")

[1] "myTst_1.0.tar.gz"
> ## clean up any previous attempt (which might have left a 00LOCK)
> unlink("myLib", recursive = TRUE)
> dir.create("myLib")
> install.packages("myTst", lib = "myLib", repos=NULL, type = "source") # with warnings
* installing *source* package 'myTst' ...
** R
** preparing package for lazy loading
** help
Warning: /var/lib/stickshift/51915fc45973cabdbf00023c/app-root/data/R-3.0.0/tests/myTst/man/myTst-package.Rd:34: All text must be in a section
Warning: /var/lib/stickshift/51915fc45973cabdbf00023c/app-root/data/R-3.0.0/tests/myTst/man/myTst-package.Rd:35: All text must be in a section
*** installing help indices
** building package indices
** testing if installed package can be loaded
* DONE (myTst)
> print(installed.packages(lib.loc= "myLib", priority= "NA"))## (PR#13332)
      Package LibPath Version Priority Depends   Imports LinkingTo Suggests
myTst "myTst" "myLib" "1.0"   NA       "methods" NA      NA        NA      
      Enhances License                     License_is_FOSS
myTst NA       "What license is it under?" NA             
      License_restricts_use OS_type MD5sum NeedsCompilation Built  
myTst NA                    NA      NA     NA               "3.0.0"
> stopifnot(require("myTst",lib = "myLib"))
Loading required package: myTst
> sm <- findMethods(show, where= as.environment("package:myTst"))
> stopifnot(names(sm@names) == "foo")
> unlink("myTst_*")
> 
> ## More building & installing packages
> ## NB: tests were added here for 2.11.0.
> ## NB^2: do not do this in the R sources!
> ## and this testdir is not installed.
> pkgSrcPath <- file.path(Sys.getenv("SRCDIR"), "Pkgs")
> if(file_test("-d", pkgSrcPath)) {
+     ## could use file.copy(recursive = TRUE)
+     system(paste('cp -r', shQuote(pkgSrcPath), shQuote(tempdir())))
+     pkgPath <- file.path(tempdir(), "Pkgs")
+ #    op <- options(warn = 2)    # There should be *NO* warnings here!
+     ## pkgB tests an empty R directory
+     dir.create(file.path(pkgPath, "pkgB", "R"), recursive = TRUE,
+                showWarnings = FALSE)
+     p.lis <- c("pkgA", "pkgB", "exNSS4")
+     for(p. in p.lis) {
+         cat("building package", p., "...\n")
+         r <- build.pkg(file.path(pkgPath, p.))
+         cat("installing package", p., "using file", r, "...\n")
+         ## we could install the tar file ... (see build.pkg()'s definition)
+         install.packages(r, lib = "myLib", repos=NULL, type = "source")
+         stopifnot(require(p.,lib = "myLib", character.only=TRUE))
+         detach(pos = match(p., sub("^package:","", search())))
+     }
+     ## TODO: not just print, but check the "list":
+     res <- installed.packages(lib.loc = "myLib", priority = "NA")
+     print(res)
+ #    options(op)
+     unlink("myLib", recursive = TRUE)
+     unlink(file.path(pkgPath), recursive = TRUE)
+ }
building package pkgA ...

installing package pkgA using file pkgA_1.1.tar.gz ...
* installing *source* package 'pkgA' ...
** R
** preparing package for lazy loading
Creating a generic function for 'plot' from package 'graphics' in package 'pkgA'
** help
No man pages found in package  'pkgA' 
*** installing help indices
** building package indices
** testing if installed package can be loaded
* DONE (pkgA)
Loading required package: pkgA
building package pkgB ...

installing package pkgB using file pkgB_1.0.tar.gz ...
* installing *source* package 'pkgB' ...
** help
No man pages found in package  'pkgB' 
*** installing help indices
** building package indices
** testing if installed package can be loaded
* DONE (pkgB)
Loading required package: pkgB
building package exNSS4 ...

installing package exNSS4 using file exNSS4_1.0.tar.gz ...
* installing *source* package 'exNSS4' ...
** R
** preparing package for lazy loading
Creating a generic function for 'plot' from package 'graphics' in package 'exNSS4'
** help
No man pages found in package  'exNSS4' 
*** installing help indices
** building package indices
** testing if installed package can be loaded
* DONE (exNSS4)
Loading required package: exNSS4
       Package  LibPath Version Priority Depends   Imports                  
exNSS4 "exNSS4" "myLib" "1.0"   NA       "methods" NA                       
myTst  "myTst"  "myLib" "1.0"   NA       "methods" NA                       
pkgA   "pkgA"   "myLib" "1.1"   NA       "methods" "Matrix"                 
pkgB   "pkgB"   "myLib" "1.0"   NA       NA        "methods, graphics, pkgA"
       LinkingTo Suggests Enhances License                     License_is_FOSS
exNSS4 NA        NA       NA       "GPL (>= 2)"                NA             
myTst  NA        NA       NA       "What license is it under?" NA             
pkgA   NA        NA       NA       "GPL (>= 2)"                NA             
pkgB   NA        NA       NA       "GPL (>= 2)"                NA             
       License_restricts_use OS_type MD5sum NeedsCompilation Built  
exNSS4 NA                    NA      NA     NA               "3.0.0"
myTst  NA                    NA      NA     NA               "3.0.0"
pkgA   NA                    NA      NA     NA               "3.0.0"
pkgB   NA                    NA      NA     NA               "3.0.0"
> unlink("myTst", recursive=TRUE)
> 
> 
> ## getPackageName()  for "package:foo":
> require('methods')
> library(tools)
> oo <- options(warn=2)
> detach("package:tools", unload=TRUE)
> options(oo)
> ## gave warning (-> Error) about creating package name
> 
> 

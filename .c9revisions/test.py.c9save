{"ts":1369410076949,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"import oauth2 as oauth\r\nimport urllib2 as urllib\r\n\r\n# See Assignment 1 instructions or README for how to get these credentials\r\naccess_token_key = \"381712765-Ij91TClLq5aar0TDHhVzwR2rR7hZeD0cpP2G3ipj\"\r\naccess_token_secret = \"cLdzNCZKXH01zNqAtb7KrNrUZEpKzWe6LyaV1WO5EE\"\r\n\r\nconsumer_key = \"D7mTAEQbudAqG5ZZUM66w\"\r\nconsumer_secret = \"GwS878Vl3LVdyj4qxdsKwpUxmm406Os6vDw36Y\"\r\n\r\n_debug = 0\r\n\r\noauth_token    = oauth.Token(key=access_token_key, secret=access_token_secret)\r\noauth_consumer = oauth.Consumer(key=consumer_key, secret=consumer_secret)\r\n\r\nsignature_method_hmac_sha1 = oauth.SignatureMethod_HMAC_SHA1()\r\n\r\nhttp_method = \"GET\"\r\n\r\n\r\nhttp_handler  = urllib.HTTPHandler(debuglevel=_debug)\r\nhttps_handler = urllib.HTTPSHandler(debuglevel=_debug)\r\n\r\n'''\r\nConstruct, sign, and open a twitter request\r\nusing the hard-coded credentials above.\r\n'''\r\ndef twitterreq(url, method, parameters):\r\n  req = oauth.Request.from_consumer_and_token(oauth_consumer,\r\n                                             token=oauth_token,\r\n                                             http_method=http_method,\r\n                                             http_url=url, \r\n                                             parameters=parameters)\r\n\r\n  req.sign_request(signature_method_hmac_sha1, oauth_consumer, oauth_token)\r\n\r\n  headers = req.to_header()\r\n\r\n  if http_method == \"POST\":\r\n    encoded_post_data = req.to_postdata()\r\n  else:\r\n    encoded_post_data = None\r\n    url = req.to_url()\r\n\r\n  opener = urllib.OpenerDirector()\r\n  opener.add_handler(http_handler)\r\n  opener.add_handler(https_handler)\r\n\r\n  response = opener.open(url, encoded_post_data)\r\n\r\n  return response\r\n\r\ndef fetchsamples():\r\n  url = \"https://stream.twitter.com/1/statuses/sample.json\"\r\n  parameters = []\r\n  response = twitterreq(url, \"GET\", parameters)\r\n  for line in response:\r\n    print line.strip().encode('utf-8')\r\n\r\nif __name__ == '__main__':\r\n  fetchsamples()\r\n"]],"start1":0,"start2":0,"length1":0,"length2":1911}]],"length":1911}
